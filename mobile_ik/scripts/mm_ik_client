#! /usr/bin/env python

import rospy

import numpy as np

from mm_msgs.srv import MMIk
from geometry_msgs.msg import Pose, PoseStamped

def mm_ik_client():
    # Wait for Service to come up
    rospy.wait_for_service('ik_computation')
    computeIk = rospy.ServiceProxy('ik_computation', MMIk)

    # Define the stamped pose
    p = Pose()
    p.position.x = -1.0
    p.position.y = -5.5
    p.position.z = 1.2
    p.position.x = 0.2
    p.position.y = -0.422
    p.position.z = 0.591
    # Pointing in negatif z direction
    p.orientation.x = 0.449
    p.orientation.y = 0.884
    p.orientation.z = 0.028
    p.orientation.w = 0.129
    p.orientation.x = 0.713
    p.orientation.y = 0.701
    p.orientation.z = 0.005
    p.orientation.w = 0.004
    pS = PoseStamped()
    pS.pose = p
    #Define the frame in which the pose is given
    pS.header.frame_id = "mmrobot_link0"
    resp1 = computeIk(pS)
    print("config :",  resp1.config.data)

    # If the mpc should be used -> for further details check mobile_mpc package
    mpcGoalConfig = np.concatenate((np.zeros(3), np.array(resp1.config.data)))
    return resp1.errorFlag


if __name__ == "__main__":
    try:
        rospy.init_node("mm_ik_client")
        result = mm_ik_client()
        print("errorflag : ", result)
    except rospy.ROSInterruptException:
        print("program interrupted before completion")
