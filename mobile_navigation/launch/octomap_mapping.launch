<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
  <arg name="map_file" default="$(find mobile_navigation)/maps/mockup_store.bt"/>
  <node name="remapping_camera" pkg="topic_tools" type="relay" args="/depth_camera/depth/points
octomap_cloud_in"/>
	<!--node pkg="octomap_server" type="octomap_server_node" name="octomap_server" args="$(find mobile_navigation)/maps/test_suite.bt"-->
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
    <!--args="$(arg map_file)"-->
		<param name="resolution" value="0.05" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="odom" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="10.0" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="octomap_cloud_in" />
    
    <param name="filter_ground" type="bool" value="true" />
    <param name="ground_filter/plane_distance" type="double" value="0.2"/>

	
	</node>
  <!--node pkg="rviz" type="rviz" name="rviz" required="true"
        args="-d $(find mobile_navigation)/rviz/mmrobot_depth_camera.rviz"/-->

</launch>
